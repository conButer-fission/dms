{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{Container,Paper,Typography,Grid,Button,List,ListItem,ListItemText,Divider}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PatientDetails(){var _patient$address,_patient$address2,_patient$address3,_patient$address4,_patient$medicalHisto;const{id}=useParams();const navigate=useNavigate();const[patient,setPatient]=useState(null);const[appointments,setAppointments]=useState([]);useEffect(()=>{fetchPatient();fetchPatientAppointments();},[id]);const fetchPatient=async()=>{try{const response=await fetch(\"http://localhost:5000/api/patients/\".concat(id));const data=await response.json();setPatient(data);}catch(error){console.error('Error fetching patient:',error);}};const fetchPatientAppointments=async()=>{try{const response=await fetch(\"http://localhost:5000/api/appointments?patient=\".concat(id));const data=await response.json();setAppointments(data);}catch(error){console.error('Error fetching appointments:',error);}};if(!patient){return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Typography,{children:\"Loading...\"})});}return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"\".concat(patient.firstName,\" \").concat(patient.lastName)}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",patient.email]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Phone:\"}),\" \",patient.phone]}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date of Birth:\"}),' ',new Date(patient.dateOfBirth).toLocaleDateString()]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Address:\"})}),/*#__PURE__*/_jsxs(Typography,{children:[(_patient$address=patient.address)===null||_patient$address===void 0?void 0:_patient$address.street,/*#__PURE__*/_jsx(\"br\",{}),(_patient$address2=patient.address)===null||_patient$address2===void 0?void 0:_patient$address2.city,\", \",(_patient$address3=patient.address)===null||_patient$address3===void 0?void 0:_patient$address3.state,' ',(_patient$address4=patient.address)===null||_patient$address4===void 0?void 0:_patient$address4.zipCode]})]})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Medical History\"}),/*#__PURE__*/_jsxs(List,{children:[(_patient$medicalHisto=patient.medicalHistory)===null||_patient$medicalHisto===void 0?void 0:_patient$medicalHisto.map((record,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:record.condition,secondary:\"Diagnosed: \".concat(new Date(record.diagnosisDate).toLocaleDateString())})}),index<patient.medicalHistory.length-1&&/*#__PURE__*/_jsx(Divider,{})]},index)),(!patient.medicalHistory||patient.medicalHistory.length===0)&&/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No medical history recorded\"})})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Appointments\"}),/*#__PURE__*/_jsxs(List,{children:[appointments.map((appointment,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"\".concat(new Date(appointment.date).toLocaleDateString(),\" - \").concat(appointment.time),secondary:\"\".concat(appointment.type,\" - \").concat(appointment.status)})}),index<appointments.length-1&&/*#__PURE__*/_jsx(Divider,{})]},appointment._id)),appointments.length===0&&/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No appointments recorded\"})})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>navigate('/appointments/new'),sx:{mt:2},children:\"Schedule New Appointment\"})]})})]})});}export default PatientDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Paper","Typography","Grid","Button","List","ListItem","ListItemText","Divider","jsx","_jsx","jsxs","_jsxs","PatientDetails","_patient$address","_patient$address2","_patient$address3","_patient$address4","_patient$medicalHisto","id","navigate","patient","setPatient","appointments","setAppointments","fetchPatient","fetchPatientAppointments","response","fetch","concat","data","json","error","console","children","container","spacing","item","xs","sx","p","variant","gutterBottom","firstName","lastName","md","email","phone","Date","dateOfBirth","toLocaleDateString","address","street","city","state","zipCode","medicalHistory","map","record","index","Fragment","primary","condition","secondary","diagnosisDate","length","appointment","date","time","type","status","_id","color","onClick","mt"],"sources":["/home/amrj/project/client/src/pages/PatientDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Paper,\n  Typography,\n  Grid,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from '@mui/material';\n\nfunction PatientDetails() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n\n  useEffect(() => {\n    fetchPatient();\n    fetchPatientAppointments();\n  }, [id]);\n\n  const fetchPatient = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${id}`);\n      const data = await response.json();\n      setPatient(data);\n    } catch (error) {\n      console.error('Error fetching patient:', error);\n    }\n  };\n\n  const fetchPatientAppointments = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/appointments?patient=${id}`);\n      const data = await response.json();\n      setAppointments(data);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n    }\n  };\n\n  if (!patient) {\n    return (\n      <Container>\n        <Typography>Loading...</Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              {`${patient.firstName} ${patient.lastName}`}\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle1\">\n                  <strong>Email:</strong> {patient.email}\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  <strong>Phone:</strong> {patient.phone}\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  <strong>Date of Birth:</strong>{' '}\n                  {new Date(patient.dateOfBirth).toLocaleDateString()}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle1\">\n                  <strong>Address:</strong>\n                </Typography>\n                <Typography>\n                  {patient.address?.street}\n                  <br />\n                  {patient.address?.city}, {patient.address?.state}{' '}\n                  {patient.address?.zipCode}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              Medical History\n            </Typography>\n            <List>\n              {patient.medicalHistory?.map((record, index) => (\n                <React.Fragment key={index}>\n                  <ListItem>\n                    <ListItemText\n                      primary={record.condition}\n                      secondary={`Diagnosed: ${new Date(\n                        record.diagnosisDate\n                      ).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                  {index < patient.medicalHistory.length - 1 && <Divider />}\n                </React.Fragment>\n              ))}\n              {(!patient.medicalHistory || patient.medicalHistory.length === 0) && (\n                <ListItem>\n                  <ListItemText primary=\"No medical history recorded\" />\n                </ListItem>\n              )}\n            </List>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              Appointments\n            </Typography>\n            <List>\n              {appointments.map((appointment, index) => (\n                <React.Fragment key={appointment._id}>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${new Date(\n                        appointment.date\n                      ).toLocaleDateString()} - ${appointment.time}`}\n                      secondary={`${appointment.type} - ${appointment.status}`}\n                    />\n                  </ListItem>\n                  {index < appointments.length - 1 && <Divider />}\n                </React.Fragment>\n              ))}\n              {appointments.length === 0 && (\n                <ListItem>\n                  <ListItemText primary=\"No appointments recorded\" />\n                </ListItem>\n              )}\n            </List>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => navigate('/appointments/new')}\n              sx={{ mt: 2 }}\n            >\n              Schedule New Appointment\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default PatientDetails; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}