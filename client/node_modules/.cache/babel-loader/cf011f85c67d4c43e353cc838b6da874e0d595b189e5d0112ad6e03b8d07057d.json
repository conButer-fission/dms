{"ast":null,"code":"var _jsxFileName = \"/home/amrj/project/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Paper, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [todayAppointments, setTodayAppointments] = useState([]);\n  const [stats, setStats] = useState({\n    totalPatients: 0,\n    todayAppointments: 0,\n    upcomingAppointments: 0\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch today's appointments\n        const today = new Date();\n        const response = await fetch(`http://localhost:5000/api/appointments/date/${today.toISOString()}`);\n        const todayData = await response.json();\n        console.log('Today\\'s appointments:', todayData);\n        setTodayAppointments(todayData);\n\n        // Fetch total patients\n        const patientsResponse = await fetch('http://localhost:5000/api/patients');\n        const patientsData = await patientsResponse.json();\n\n        // Fetch upcoming appointments\n        const upcomingResponse = await fetch('http://localhost:5000/api/appointments/upcoming');\n        const upcomingData = await upcomingResponse.json();\n        console.log('Upcoming appointments:', upcomingData);\n        setStats({\n          totalPatients: patientsData.length,\n          todayAppointments: todayData.length,\n          upcomingAppointments: upcomingData.length\n        });\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Total Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: stats.totalPatients\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Today's Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: stats.todayAppointments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Upcoming Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: stats.upcomingAppointments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Today's Schedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [todayAppointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${appointment.time} - ${appointment.patient.firstName} ${appointment.patient.lastName}`,\n                  secondary: `${appointment.type} - ${appointment.duration} minutes`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), index < todayAppointments.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 60\n              }, this)]\n            }, appointment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)), todayAppointments.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No appointments scheduled for today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"7OdhJlLBGK6XZg1JAQy/opkFHMQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Paper","Typography","List","ListItem","ListItemText","Divider","jsxDEV","_jsxDEV","Dashboard","_s","todayAppointments","setTodayAppointments","stats","setStats","totalPatients","upcomingAppointments","fetchData","today","Date","response","fetch","toISOString","todayData","json","console","log","patientsResponse","patientsData","upcomingResponse","upcomingData","length","error","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","sx","p","map","appointment","index","Fragment","primary","time","patient","firstName","lastName","secondary","type","duration","_id","_c","$RefreshReg$"],"sources":["/home/amrj/project/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from '@mui/material';\n\nfunction Dashboard() {\n  const [todayAppointments, setTodayAppointments] = useState([]);\n  const [stats, setStats] = useState({\n    totalPatients: 0,\n    todayAppointments: 0,\n    upcomingAppointments: 0,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch today's appointments\n        const today = new Date();\n        const response = await fetch(\n          `http://localhost:5000/api/appointments/date/${today.toISOString()}`\n        );\n        const todayData = await response.json();\n        console.log('Today\\'s appointments:', todayData);\n        setTodayAppointments(todayData);\n\n        // Fetch total patients\n        const patientsResponse = await fetch('http://localhost:5000/api/patients');\n        const patientsData = await patientsResponse.json();\n\n        // Fetch upcoming appointments\n        const upcomingResponse = await fetch('http://localhost:5000/api/appointments/upcoming');\n        const upcomingData = await upcomingResponse.json();\n        console.log('Upcoming appointments:', upcomingData);\n\n        setStats({\n          totalPatients: patientsData.length,\n          todayAppointments: todayData.length,\n          upcomingAppointments: upcomingData.length,\n        });\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Dashboard\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Stats Cards */}\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Total Patients\n            </Typography>\n            <Typography variant=\"h4\">{stats.totalPatients}</Typography>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Today's Appointments\n            </Typography>\n            <Typography variant=\"h4\">{stats.todayAppointments}</Typography>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Upcoming Appointments\n            </Typography>\n            <Typography variant=\"h4\">{stats.upcomingAppointments}</Typography>\n          </Paper>\n        </Grid>\n\n        {/* Today's Appointments */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Today's Schedule\n            </Typography>\n            <List>\n              {todayAppointments.map((appointment, index) => (\n                <React.Fragment key={appointment._id}>\n                  <ListItem>\n                    <ListItemText\n                      primary={`${appointment.time} - ${appointment.patient.firstName} ${appointment.patient.lastName}`}\n                      secondary={`${appointment.type} - ${appointment.duration} minutes`}\n                    />\n                  </ListItem>\n                  {index < todayAppointments.length - 1 && <Divider />}\n                </React.Fragment>\n              ))}\n              {todayAppointments.length === 0 && (\n                <ListItem>\n                  <ListItemText primary=\"No appointments scheduled for today\" />\n                </ListItem>\n              )}\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}